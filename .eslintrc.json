{
  "env": {
    "browser": true,
    "commonjs": true,
    "es6": true
  },
  "extends": [
    "react-app",
    "react-app/jest",
    "eslint:recommended",
    "plugin:react/recommended",
    "prettier",
    // "plugin:prettier/recommended",
    "plugin:import/typescript",
    "plugin:react-hooks/recommended"
  ],
  "parserOptions": {
    "project": "tsconfig.json",
    "sourceType": "module",
    "ecmaFeatures": {
      "jsx": true
    }
  },
  // "parser": "babel-eslint",
  "plugins": ["react"],
  /**
   * "off" 或 0 - 关闭规则
   * "warn" 或 1 - 开启规则，使用警告级别的错误：warn (不会导致程序退出),
   * "error" 或 2 - 开启规则，使用错误级别的错误：error (当被触发的时候，程序会退出)
   */
  "rules": {
    "no-console": "off",
    // 禁止未使用的变量
    // "no-unused-vars": [
    //   2,
    //   {
    //     "vars": "all",
    //     "args": "none"
    //   }
    // ],
    // 强制使用getter,setter成对出现
    "accessor-pairs": 2,
    // 要求箭头函数的箭头之前或之后有空格
    "arrow-spacing": [
      2,
      {
        "before": true,
        "after": true
      }
    ],
    // 禁止或强制在单行代码块中使用空格(禁用)
    "block-spacing": [2, "always"],
    //强制使用一致的缩进 第二个参数为 "tab" 时，会使用tab，
    // if while function 后面的{必须与if在同一行，java风格。
    "brace-style": [
      2,
      "1tbs",
      {
        "allowSingleLine": true
      }
    ],
    // 驼峰式大小写
    "CamelCase": [
      0,
      {
        "properties": "always"
      }
    ],
    // 要求或禁止使用拖尾逗号
    // "comma-dangle": [2, "never"],
    // 控制逗号前后的空格
    "comma-spacing": [
      2,
      {
        "before": false,
        "after": true
      }
    ],
    // 控制逗号在行尾出现还是在行首出现 (默认行尾)
    // http://eslint.org/docs/rules/comma-style
    "comma-style": [2, "last"],
    //强制所有控制语句使用一致的括号风格, 需要遵循花括号约定
    "curly": [2, "all"],
    // 验证super()构造函数中的调用,派生类的构造函数必须调用super(). 非派生类的构造函数不得调用super()
    "constructor-super": 2,
    // 文件末尾强制换行
    "eol-last": 2,
    // 消除类型不安全的相等运算符=== 和 !==
    "eqeqeq": ["error", "always", { "null": "ignore" }],
    // 强制围绕*生成器函数的间距,
    // 强制 generator 函数中 * 号周围使用一致的空格
    "generator-star-spacing": [
      2,
      {
        "before": true,
        "after": true
      }
    ],
    // 强制回调错误处理
    "handle-callback-err": [2, "^(err|error)$"],
    // "indent": ["error", 2],
    // 强制一致缩进
    // "indent": [
    //   2,
    //   2,
    //   {
    //     "SwitchCase": 1
    //   }
    // ],
    // 强制在 JSX 属性中一致地使用双引号或单引号
    "jsx-quotes": [2, "prefer-double"],
    // 强制在对象字面量的属性中键和值之间使用一致的间距
    "key-spacing": [
      2,
      {
        "beforeColon": false,
        "afterColon": true
      }
    ],
    // 强制在关键字前后使用一致的空格 (前后腰需要)
    "keyword-spacing": [
      2,
      {
        "before": true,
        "after": true
      }
    ],
    // 要求构造函数首字母大写 （要求调用 new 操作符时有首字母大小的函数，允许调用首字母大写的函数时没有 new 操作符。）
    "new-cap": [
      2,
      {
        "newIsCap": true,
        "capIsNew": false
      }
    ],
    // 要求调用无参构造函数时有圆括号
    "new-parens": 2,
    // 禁止使用 Array 构造函数
    "no-array-constructor": 2,
    // 禁止使用caller/callee
    "no-caller": 2,
    // 禁止修改类声明的变量
    "no-class-assign": 2,
    // 禁止在条件语句中使用赋值运算符
    "no-cond-assign": 2,
    // 禁止修改 const 声明的变量
    "no-const-assign": 2,
    // 禁止在正则表达式中使用控制字符
    // "no-control-regex": 0,
    // 禁止删除变量 delete运算符的目的是从对象中删除属性。delete在变量上使用运算符可能会导致意外行为。
    "no-delete-var": 2,
    // 禁止 function 定义中出现重名参数
    "no-dupe-args": 2,
    // 禁止类成员中出现重复的名称
    "no-dupe-class-members": 2,
    // 禁止对象字面量中出现重复的 key
    "no-dupe-keys": 2,
    // 禁止重复的 case 标签
    "no-duplicate-case": 2,
    // 禁止在正则表达式中使用空字符类
    "no-empty-character-class": 2,
    // 禁止使用空解构模式
    "no-empty-pattern": 2,
    // 不允许使用eval
    "no-eval": 2,
    // 禁止对 catch 子句的参数重新赋值
    "no-ex-assign": 2,
    // 禁止直接修改内建对象的属性
    "no-extend-native": 2,
    // 禁止不必要的函数绑定
    "no-extra-bind": 2,
    // 禁止不必要的布尔转换
    "no-extra-boolean-cast": 2,
    // 禁止不必要的括号 //(a * b) + c;//报错  只在 函数表达式周围禁止不必要的圆括号
    "no-extra-parens": [2, "functions"],
    // 消除一种情况无意间转移到另一种情况 switch
    "no-fallthrough": 2,
    // 消除浮动小数点，并在数值具有小数点但前后缺少数字时发出警告
    "no-floating-decimal": 2,
    // 不允许重新分配function声明
    "no-func-assign": 2,
    // 禁止隐式 eval()
    "no-implied-eval": 2,
    // 要求函数声明和变量声明（可选的）在程序或函数体的顶部
    "no-inner-declarations": [2, "functions"],
    // 禁止在RegExp构造函数中使用无效的正则表达式字符串
    "no-invalid-regexp": 2,
    // 捕获不是正常制表符和空格的无效空格
    "no-irregular-whitespace": 2,
    // 不允许标签与变量同名
    "no-label-var": 2,
    // 禁止带标签的语句
    "no-labels": [
      2,
      {
        "allowLoop": false,
        "allowSwitch": false
      }
    ],
    // 禁止不必要的嵌套块
    "no-lone-blocks": 2,
    //禁止空格和 tab 的混合缩进
    "no-mixed-spaces-and-tabs": ["error", "smart-tabs"],
    // 禁止在逻辑表达式、条件表达式、声明、数组元素、对象属性、序列和函数参数周围出现多个空格
    "no-multi-spaces": 2,
    // 禁止多行字符串
    "no-multi-str": 2,
    // 不允许多个空行
    "no-multiple-empty-lines": [
      2,
      {
        "max": 2
      }
    ],
    // 禁止原始包装器
    "no-new-wrappers": 2,
    // 不允许调用Math，JSON，Reflect和Atomics对象的功能
    "no-obj-calls": 2,
    // 禁止八进制文字
    "no-octal": 2,
    // 不允许在字符串文字中使用八进制转义序列
    "no-octal-escape": 2,
    // 禁止变量重新声明
    "no-redeclare": 2,
    // 禁止在正则表达式文字中使用多个空格
    "no-regex-spaces": 2,
    // 禁止在 return 语句中赋值
    "no-return-assign": [2, "except-parens"],
    // 禁止自我比较
    "no-self-compare": 2,
    // 禁止使用逗号运算符
    "no-sequences": 2,
    // 禁止覆盖受限制的标识符
    "no-shadow-restricted-names": 2,
    // 禁止 function 标识符和括号之间出现空格
    "no-spaced-func": 2,
    // 通过禁止抛出不可能是Error对象的文字和其他表达式来在抛出异常时保持一致性
    "no-throw-literal": 2,
    // 禁用行尾空格
    "no-trailing-spaces": 2,
    // 禁止使用未声明的变量
    "no-undef": 2,
    // 禁止将变量初始化为
    "no-undef-init": 2,
    // 禁止混淆的多行表达式
    "no-unexpected-multiline": 2,
    // 禁止循环的未修改条件
    "no-unmodified-loop-condition": 2,
    // 禁止可以在有更简单的可替代的表达式时使用三元操作符
    "no-unneeded-ternary": [
      2,
      {
        "defaultAssignment": false // 允许将条件表达式作为默认赋值模式
      }
    ],
    // 禁止finally块中的控制流语句
    "no-unsafe-finally": 2,
    // 禁止不必要的计算性能键对象的文字
    "no-useless-computed-key": 2,
    // 不改变行为的情况下安全删除的转义
    "no-useless-escape": 0,
    // 禁止属性前有空白
    "no-whitespace-before-property": 2,
    // "one-var": [
    //   2,
    //   {
    //     "initialized": "never"
    //   }
    // ],
    // 强制操作符使用一致的换行符
    "operator-linebreak": [
      2,
      "after",
      {
        "overrides": {
          "?": "before",
          ":": "before"
        }
      }
    ],
    // 要求或禁止块内填充
    "padded-blocks": [2, "never"],
    // 要求或禁止使用分号而不是 ASI（这个才是控制行尾部分号的，）
    "semi": [0, "always"],
    // 强制分号之前和之后使用一致的空格
    "semi-spacing": [
      2,
      {
        "before": false,
        "after": true
      }
    ],
    // 强制在块之前使用一致的空格
    "space-before-blocks": [2, "always"],
    // 强制在 function的左括号之前使用一致的空格(await async 括号前使用报错)
    // "space-before-function-paren": [2, "never"],
    // 强制在圆括号内使用一致的空格
    "space-in-parens": [2, "never"],
    // 要求操作符周围有空格
    "space-infix-ops": 2,
    // 强制在一元操作符前后使用一致的空格
    "space-unary-ops": [
      2,
      {
        "words": true,
        "nonwords": false
      }
    ],
    // 强制在注释中 // 或 /* 使用一致的空格
    // "spaced-comment": [
    //   2,
    //   "always",
    //   {
    //     "markers": [
    //       "global",
    //       "globals",
    //       "eslint",
    //       "eslint-disable",
    //       "*package",
    //       "!",
    //       ","
    //     ]
    //   }
    // ],
    // 要求或禁止模板字符串中的嵌入表达式周围空格的使用
    "template-curly-spacing": [2, "never"],
    // isNaN()检查时需要调用NaN
    "use-isnan": 2,
    // 强制将typeof表达式与有效字符串进行比较
    "valid-typeof": 2,
    // 强制在 yield* 表达式中 * 周围使用空格
    "yield-star-spacing": [2, "both"],
    // 将变量与文字值进行比较的一致条件样式
    "yoda": [2, "never"],
    // 要求使用 const 声明那些声明后不再被修改的变量
    "prefer-const": 0,
    // 禁止使用debugger
    // "no-debugger": process.env.NODE_ENV === "production" ? 2 : 0,
    // 强制在大括号内保持一致的间距
    "object-curly-spacing": [
      2,
      "always",
      {
        "objectsInObjects": false
      }
    ],
    // 指定数组的元素之间要以空格隔开(, 后面)， never参数：[ 之前和 ] 之后不能带空格，always参数：[ 之前和 ] 之后必须带空格
    "array-bracket-spacing": [2, "never"]
  },
  "settings": {
    "react": {
      "version": "detect"
    }
  },
  "overrides": [
    {
      "files": ["src/**/*.ts?(x)"]
    }
  ]
}
